[user]
    name = Rafał Mirończyk
    email = voyageur.pl@gmail.com

[github]
    user = v0y

[color]
    ui = auto

[core]
    excludesfile = ~/.gitfiles/global-ignore
	editor = vim
	autocrlf = input

[alias]
    # rebase
    r = rebase
    rb = rebase
    rbim = rebase -i --autosquash master
    rbm = rebase -p master
    rbi = rebase -i --autosquash
    rbih = "!f() { git rebase -i --autosquash HEAD~$1; }; f"
    arbc = "!f() { git add .; git rebase --continue; }; f"
    rbc = rebase --continue
    rba = rebase --abort
    rbs = rebase --skip

    # merge
    m = merge
    ms = merge --squash
    msm = merge --squash master

    # cherry-pick
    cp = cherry-pick
    cpa = cherry-pick --abort
    cpq = cherry-pick --quit
    cpc = cherry-pick --continue

    # misc
    co = checkout
    df = diff
    st = status
    rl = reflog
    a = add
    b = branch
    f = fetch
    alias = config --get-regexp alias
    sh = show

    # push/pull
    ph = push
    phf = push -f
    phu = push -u
    pl = pull
    plu = pull -u
    pht = push --tags
    phut = push -u --tags
    phft = push --force --tags

    # reset
    hard = reset --hard
    hardh = "!f() { git reset --hard HEAD@\\{$1\\}; }; f"
    hardr = "git reset --hard origin/$1 && git clean -f -d"

    # stash
    sth = stash
    sthl = stash list
    stha = "!f() { git stash apply stash@\\{$1\\}; }; f"
    sthp = "!f() { git stash pop stash@\\{$1\\}; }; f"
    sthd = "!f() { git stash drop stash@\\{$1\\}; }; f"

    # bisect
    bs = bisect
    bss = bisect start
    bsg = bisect good
    bsb = bisect bad
    bsr = bisect reset
    bsbg = "!f() { git bisect start; git bisect bad; git bisect good $1; }; f"

    # custom git commands
    apr = accept-pr
    sapr = "!f() { git stash && git accept-pr $1; git stash apply stash@\\{0\\}; }; f"
    reword = "!f() { branch=`git symbolic-ref --short HEAD`; git checkout $1; git commit --amend --cleanup=whitespace; git rebase HEAD $branch; }; f"

    # log
    l = log
    lg = log --pretty=format:'%C(yellow)%h %Cblue%an %Creset%s%Cgreen%d' --date=iso

    # commit
    ci = commit
    cim = commit -m
    cia = commit -a
    ciam = commit -a -m
    cic = commit --cleanup=whitespace
    ciac = commit -a --cleanup=whitespace
    amend = commit --amend
    aamend = commit -a --amend
    amendc = commit --amend --cleanup=whitespace
    aamendc = commit -a --amend --cleanup=whitespace

    # tag
    t = tag
    # tag for deploy
    td = "!f() { git tag $1-`date +%Y%m%d`-$2; }; f"
    # bindweed
    tdws = "!f() { git tag $1-`date +%Y%m%d`-wsumie; }; f"
    tdbw = "!f() { git tag $1-`date +%Y%m%d`-bindweed; }; f"
    tds1bw = "!f() { git tag $1-`date +%Y%m%d`-seed1.bindweed; }; f"
    # cas
    tdkws = "!f() { git tag $1-`date +%Y%m%d`-konto.wsumie.pl; }; f"
    tdkbw = "!f() { git tag $1-`date +%Y%m%d`-konto.bindweed.pl; }; f" 
    # snowdropy
    tdwp = "!f() { git tag $1-`date +%Y%m%d`-wpolityce; }; f"
    tdwn = "!f() { git tag $1-`date +%Y%m%d`-wnas; }; f"
    tdwg = "!f() { git tag $1-`date +%Y%m%d`-wgospodarce; }; f"

    # hub
    branch-ticket-prefix = !git branch | sed -n 's/* \\([0-9]*\\).*/\\1/p'
    gh = "!f() { hub browse -- issues/$1; }; f $(git branch-ticket-prefix)"
    issue = "!f() { hub browse -- issues/$1; }; f"
    is = "!f() { hub browse -- issues/$1; }; f"
    pr = pull-request

    # submodules
    sub = submodule
    suba = submodule add
    subu = submodule update

    # ghi
    cm = "!f() { ghi comment $1 -m \"$2\"; }; f"
    as = "!f() { ghi assign $1 $2; }; f"
    cmas = "!f() { ghi comment $1 -m $2 && ghi assign $1 $3; }; f"

[push]
    default = current

[pull]
    rebase = true
[ghi]
	token = e5a36eb0d20a61b7d70ef53d3a8879a5c0786452
